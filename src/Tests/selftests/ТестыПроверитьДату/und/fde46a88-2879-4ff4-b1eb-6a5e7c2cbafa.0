{2,
{28,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{17,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},0,1},0,"","",1,
{17,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,0,1}
},"
//{ основная процедура для юнит-тестирования xUnitFor1C
&НаКлиенте
Перем ЮТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить(""ТестДолжен_ПроверитьВхождениеДатыВПериод"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьДатыОтличающиеНа1Секунду"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьДатыОтличающиеНа2Секунды"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьДатыОтличающиеНа3Секунды"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьРазныеДаты"");
	ВсеТесты.Добавить(""ТестДолжен_ПроверитьОдинаковыеДаты"");

	Возврат ВсеТесты;
	
КонецФункции
//}

//{ блок юнит-тестов - сами тесты

&НаКлиенте
Процедура ТестДолжен_ПроверитьВхождениеДатыВПериод() Экспорт
	Дата = '20101201235426';	
	Период = Новый СтандартныйПериод(НачалоМинуты(Дата), КонецМинуты(Дата));
	ЮТест.ПроверитьДату(Дата, Период, ""Дата должна находиться в периоде, а это не выполнено!"");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьДатыОтличающиеНа1Секунду() Экспорт
	Дата = '20101201235426';	
	Дата2 = '20101201235426'-1;	
	ЮТест.ПроверитьРавенствоДатСТочностью2Секунды(Дата, Дата2, ""Даты должны считаться одинаковыми, а это не выполнено!"");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьДатыОтличающиеНа2Секунды() Экспорт
	Дата = '20101201235426';	
	Дата2 = '20101201235426'-2;	
	ЮТест.ПроверитьРавенствоДатСТочностью2Секунды(Дата, Дата2, ""Даты должны считаться одинаковыми, а это не выполнено!"");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьДатыОтличающиеНа3Секунды() Экспорт
	Дата = '20101201235426';	
	Дата2 = '20101201235426'-3;	
	ОжидаемоеОписаниеОшибки = ""Даты должны считаться разными, а это не выполнено!"";
	
	ПроверитьРавенствоДатСТочностью2Секунды(Дата, Дата2, ОжидаемоеОписаниеОшибки);
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьРазныеДаты() Экспорт
	Дата = '20101201235426';	
	Дата2 = ТекущаяДата();	
	ОжидаемоеОписаниеОшибки = ""Даты должны считаться разными, а это не выполнено!"";
	
	ПроверитьРавенствоДатСТочностью2Секунды(Дата, Дата2, ОжидаемоеОписаниеОшибки);	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьРавенствоДатСТочностью2Секунды(Дата, Дата2, ОжидаемоеОписаниеОшибки)
	БылоИсключение = Ложь;
	Попытка
		ЮТест.ПроверитьРавенствоДатСТочностью2Секунды(Дата, Дата2, ОжидаемоеОписаниеОшибки);
	Исключение
		БылоИсключение = Истина;
		ПолученноеОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
		
	Если НЕ БылоИсключение ИЛИ Найти(ПолученноеОписаниеОшибки, ОжидаемоеОписаниеОшибки) = 0 Тогда
		ВызватьИсключение ОжидаемоеОписаниеОшибки+Символы.ПС+ПолученноеОписаниеОшибки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ПроверитьОдинаковыеДаты() Экспорт
	Дата = '20101201235426';	
	Дата2 = '20101201235426';	
	ЮТест.ПроверитьРавенствоДатСТочностью2Секунды(Дата, Дата2, ""Даты должны считаться одинаковыми, а это не выполнено!"");
КонецПроцедуры

//} ",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",ba46524a-1f27-4008-8686-2703897f6737}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0}
}