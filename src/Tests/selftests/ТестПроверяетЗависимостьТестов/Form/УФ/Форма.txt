&НаКлиенте
Перем ГлобПерем; // для тестирования

&НаКлиенте
Перем ЮТест;  // для тестирования

//{ основная процедура для юнит-тестирования 1CUnit
&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("ТестДолжен_ИзменитьСостояниеПеременнойУФ");
	ВсеТесты.Добавить("ТестДолжен_СравнитьСостояниеПеременнойУФ");
	ВсеТесты.Добавить("ТестДолжен_ИзменитьСостояниеОбработкиУФ");
	ВсеТесты.Добавить("ТестДолжен_СравнитьСостояниеОбработкиУФ");
	ВсеТесты.Добавить("ТестДолжен_ИзменитьСостояниеУпрФормы");
	ВсеТесты.Добавить("ТестДолжен_СравнитьСостояниеУпрФормы");

	Возврат ВсеТесты;
	
КонецФункции

&НаКлиенте
Функция РазрешенСлучайныйПорядокВыполненияТестов() Экспорт
	Возврат Ложь;
КонецФункции
//}

//{ блок юнит-тестов - сами тесты

&НаКлиенте
Процедура ТестДолжен_ИзменитьСостояниеПеременнойУФ() Экспорт
	ГлобПерем = 2;
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_СравнитьСостояниеПеременнойУФ() Экспорт
	ЮТест.ПроверитьРавенство(2, ГлобПерем, "Не выполнено условие Неопределено == ГлобПерем - тесты являются зависимыми");
	ГлобПерем = 10;
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ИзменитьСостояниеОбработкиУФ() Экспорт
	Объект.Состояние = 2;
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_СравнитьСостояниеОбработкиУФ() Экспорт
	ЮТест.ПроверитьРавенство(2, Объект.Состояние, "Не выполнено условие 0 == Состояние - тесты являются зависимыми");
	Объект.Состояние = 10;
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_ИзменитьСостояниеУпрФормы() Экспорт
	Состояние1 = 2;
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_СравнитьСостояниеУпрФормы() Экспорт
	ЮТест.ПроверитьРавенство(2, Состояние1, "Не выполнено условие 0 == Состояние - тесты являются зависимыми");
	Состояние1 = 10;
КонецПроцедуры


//} конец блока юнит-тестов
