Перем	ГлобПерем;

//{ основная процедура для юнит-тестирования xUnitFor1C
Перем ЮТест;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("ТестДолжен_ИзменитьСостояниеПеременной");
	ВсеТесты.Добавить("ТестДолжен_СравнитьСостояниеПеременной");
	ВсеТесты.Добавить("ТестДолжен_ИзменитьСостояниеОбработки");
	ВсеТесты.Добавить("ТестДолжен_СравнитьСостояниеОбработки");

	Возврат ВсеТесты;
	
КонецФункции

Функция РазрешенСлучайныйПорядокВыполненияТестов() Экспорт
	Возврат Ложь;
КонецФункции
//}

//{ блок юнит-тестов - сами тесты
Процедура ПропуститьТестИзОтказаОтСозданияРазныхЭкземпляровТестовойОбработки() Экспорт
	ЮТест.ПропуститьТест("Независимость тестов путем создания разных экземпляров обработки-теста больше не поддерживается");
КонецПроцедуры

Процедура ТестДолжен_ИзменитьСостояниеПеременной() Экспорт
	ПропуститьТестИзОтказаОтСозданияРазныхЭкземпляровТестовойОбработки();
	
	ГлобПерем = 2;
КонецПроцедуры

Процедура ТестДолжен_СравнитьСостояниеПеременной() Экспорт
	ПропуститьТестИзОтказаОтСозданияРазныхЭкземпляровТестовойОбработки();
	
	ЮТест.ПроверитьРавенство(Неопределено, ГлобПерем, "Не выполнено условие Неопределено != ГлобПерем - тесты являются зависимыми");
КонецПроцедуры

Процедура ТестДолжен_ИзменитьСостояниеОбработки() Экспорт
	ПропуститьТестИзОтказаОтСозданияРазныхЭкземпляровТестовойОбработки();
	
	Состояние = 2;
КонецПроцедуры

Процедура ТестДолжен_СравнитьСостояниеОбработки() Экспорт
	ПропуститьТестИзОтказаОтСозданияРазныхЭкземпляровТестовойОбработки();
	
	ЮТест.ПроверитьРавенство(0, Состояние, "Не выполнено условие Неопределено != Состояние - тесты являются зависимыми");
КонецПроцедуры

//} 
