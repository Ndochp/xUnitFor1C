
//{ основная процедура для юнит-тестирования xUnitFor1C
Перем ЮТест;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("ТестДолжен_ПроверитьРавенствоТаблиц");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьНеРавенствоТаблиц");
	ВсеТесты.Добавить("Тест_ДолженПроверитьНеРавенствоТабличныхДокументов");
	ВсеТесты.Добавить("Тест_ДолженПроверитьРавенствоТабличныхДокументов");

	Возврат ВсеТесты;
	
КонецФункции
//}

//{ блок юнит-тестов - сами тесты

Процедура ТестДолжен_ПроверитьРавенствоТаблиц() Экспорт
	Таблицы = Создать2ТаблицыСДанными();
	Таб1 = Таблицы.Таблица1;
	Таб2 = Таблицы.Таблица2;
	
	ЮТест.ПроверитьРавенствоТаблиц(Таб1, Таб2, "Таблицы 1 и 2 должны совпадать, а они различны!");
КонецПроцедуры

Процедура ТестДолжен_ПроверитьНеРавенствоТаблиц() Экспорт
	Таблицы = Создать2ТаблицыСДанными();
	Таб1 = Таблицы.Таблица1;
	Таб2 = Таблицы.Таблица2;
	
	Строка = Таб2[0];
	Строка.Колонка1 = 21;
	Строка.Колонка2 = "строка21";

	Строка = Таб2[1];
	Строка.Колонка1 = 22;
	Строка.Колонка2 = "строка22";
	
	БылоИсключение = Ложь;
	Попытка
		ЮТест.ПроверитьРавенствоТаблиц(Таб1, Таб2, "Таблицы 1 и 2 не должны совпадать, а они одинаковы!");
	Исключение
		Ошибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		БылоИсключение = Истина;
	КонецПопытки;
	ЮТест.Проверить(БылоИсключение, "Должны были получить исключение из-за неравенства таблиц, а его не было");
	
	СтрокаОшибки = "
		|Таблицы 1 и 2 должны совпадать, а они различны
		|Различия в таблицах:
		|Ожидали статус <ВидОшибки_НетОшибок>, а получили <ВидОшибки_НеСовпадаютЗначенияВЯчейкеТаблицы>
		|Значение [Колонка1:1]. Ожидали <11>, а получили <21>
		|Значение [Колонка2:1]. Ожидали <строка11>, а получили <строка21>
		|Значение [Колонка1:2]. Ожидали <12>, а получили <22>
		|Значение [Колонка2:2]. Ожидали <строка12>, а получили <строка22>
		|
		|Таблицы 1 и 2 не должны совпадать, а они одинаковы!";
		
	ЮТест.ПроверитьВхождение(Ошибка, СтрокаОшибки, "Должны были получить исключение из-за неравенства таблиц, а его не было");
КонецПроцедуры

Функция Создать2ТаблицыСДанными()
	Таб1 = Новый ТаблицаЗначений;
	Таб1.Колонки.Добавить("Колонка1",, "Колонка1");
	Таб1.Колонки.Добавить("Колонка2",, "Колонка2");
	Строка = Таб1.Добавить();
	Строка.Колонка1 = 11;
	Строка.Колонка2 = "строка11";

	Строка = Таб1.Добавить();
	Строка.Колонка1 = 12;
	Строка.Колонка2 = "строка12";
	
	Таб2 = Новый ТаблицаЗначений;
	Таб2.Колонки.Добавить("Колонка1",, "Колонка1");
	Таб2.Колонки.Добавить("Колонка2",, "Колонка2");
	Строка = Таб2.Добавить();
	Строка.Колонка1 = 11;
	Строка.Колонка2 = "строка11";

	Строка = Таб2.Добавить();
	Строка.Колонка1 = 12;
	Строка.Колонка2 = "строка12";
	
	Рез = Новый Структура("Таблица1, Таблица2", Таб1, Таб2);		
	Возврат Рез;
	
КонецФункции

Процедура Тест_ДолженПроверитьНеРавенствоТабличныхДокументов() Экспорт
	Макет1 = ПолучитьМакет("СозданиеОдногоПользователяИБ");
	Макет2 = ПолучитьМакет("СозданиеОдногоПользователяИБ_УФ");
	
	БылоИсключение = Ложь;
	Попытка
		ЮТест.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет2, "Таблицы 1 и 2 не должны совпадать, а они одинаковы!");
	Исключение
		Ошибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		БылоИсключение = Истина;
	КонецПопытки;
	ЮТест.Проверить(БылоИсключение, "Должны были получить исключение из-за неравенства таблиц, а его не было");
	
	СтрокаОшибки = "
		|Таблицы 1 и 2 должны совпадать, а они различны
		|Различия в таблицах:
		|Ожидали статус <ВидОшибки_НетОшибок>, а получили <ВидОшибки_НеСовпадаютЗначенияВЯчейкеТаблицы>
		|Значение [К6:7]. Ожидали <Обычное приложение>, а получили <Управляемое приложение>
		|
		|Таблицы 1 и 2 не должны совпадать, а они одинаковы!";
	
	ЮТест.ПроверитьВхождение(Ошибка, СтрокаОшибки, "Должны были получить исключение из-за неравенства таблиц, а его не было");
КонецПроцедуры

Процедура Тест_ДолженПроверитьРавенствоТабличныхДокументов() Экспорт
	Макет1 = ПолучитьМакет("СозданиеОдногоПользователяИБ_УФ");
	Макет2 = Новый ТабличныйДокумент;
	Макет2.Вывести(ПолучитьМакет("СозданиеОдногоПользователяИБ_УФ"));
	
	ЮТест.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет2, "Таблицы 1 и 2 должны совпадать, а они различны!");
КонецПроцедуры

//} 