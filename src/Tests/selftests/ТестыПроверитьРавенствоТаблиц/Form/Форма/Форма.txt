
//{ основная процедура для юнит-тестирования xUnitFor1C
&НаКлиенте
Перем ЮТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("Тест_ДолженПроверитьНеРавенствоТабличныхДокументов");
	ВсеТесты.Добавить("Тест_ДолженПроверитьРавенствоТабличныхДокументов");
	ВсеТесты.Добавить("Тест_ДолженПроверитьРавенствоТабличныхДокументовСоСкрытымиКолонками");
	ВсеТесты.Добавить("Тест_ДолженПроверитьРавенствоТабличныхДокументовСоСкрытымиСтроками");

	Возврат ВсеТесты;
	
КонецФункции
//}

//{ блок юнит-тестов - сами тесты
&НаКлиенте
Процедура Тест_ДолженПроверитьНеРавенствоТабличныхДокументов() Экспорт
	Макет1 = ПолучитьМакет("СозданиеОдногоПользователяИБ");
	Макет2 = ПолучитьМакет("СозданиеОдногоПользователяИБ_УФ");
	
	БылоИсключение = Ложь;
	Попытка
		ЮТест.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет2, "Таблицы 1 и 2 не должны совпадать, а они одинаковы!");
	Исключение
		Ошибка = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		БылоИсключение = Истина;
	КонецПопытки;
	ЮТест.Проверить(БылоИсключение, "Должны были получить исключение из-за неравенства таблиц, а его не было");
	
	СтрокаОшибки =
		"Таблицы должны совпадать, а они различны
		|Различия в таблицах:
		|Ожидали статус <ТаблицыСовпадают>, а получили <НеСовпадаютЗначенияВЯчейкеТаблицы>
		|Значение [К6:6]. Ожидали <Обычное приложение>, а получили <Управляемое приложение>
		|
		|Таблицы 1 и 2 не должны совпадать, а они одинаковы!";
	
	ЮТест.ПроверитьВхождение(Ошибка, СтрокаОшибки, "Должны были получить исключение из-за неравенства таблиц, а его не было");
КонецПроцедуры

&НаКлиенте
Процедура Тест_ДолженПроверитьРавенствоТабличныхДокументов() Экспорт
	Макет1 = ПолучитьМакет("СозданиеОдногоПользователяИБ_УФ");
	Макет2 = ПолучитьМакет("СозданиеОдногоПользователяИБ_УФ");
	
	ЮТест.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет2, "Таблицы 1 и 2 должны совпадать, а они различны!");
КонецПроцедуры

&НаКлиенте
Процедура Тест_ДолженПроверитьРавенствоТабличныхДокументовСоСкрытымиКолонками() Экспорт
	
	Макет1 = ПолучитьМакет("СозданиеОдногоПользователяИБ");
	Макет2 = ПолучитьМакет("СозданиеОдногоПользователяИБ_СоСкрытойКолонкой");
	
	ЮТест.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет2, Истина, "Таблицы 1 и 2 должны совпадать, а они различны!");
	
	Макет3 = ПолучитьМакет("СозданиеОдногоПользователяИБ");
	Макет3.Область(0, 1, 1, 1).Видимость = Ложь;
	
	ЮТест.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет3, "Таблицы 1 и 3 должны совпадать, а они различны!");
	
	Макет4 = ПолучитьМакет("СозданиеОдногоПользователяИБ_УФ");
	Макет4.Область(0, 6, 1, 6).Видимость = Ложь;
	Макет5 = ПолучитьМакет("СозданиеОдногоПользователяИБ");
	Макет5.Область(0, 6, 1, 6).Видимость = Ложь;
	
	ЮТест.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет4, Макет5, Истина, "Таблицы 4 и 5 должны совпадать, а они различны!");
	
КонецПроцедуры

&НаКлиенте
Процедура Тест_ДолженПроверитьРавенствоТабличныхДокументовСоСкрытымиСтроками() Экспорт
	
	Макет1 = ПолучитьМакет("СозданиеОдногоПользователяИБ");
	Макет2 = ПолучитьМакет("СозданиеОдногоПользователяИБ_УФ");
	
	Макет1.Область(6,, 6).Видимость = Ложь;
	Макет2.Область(6,, 6).Видимость = Ложь;
	
	ЮТест.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет2,, Истина, "Таблицы 1 и 2 должны совпадать, а они различны!");
	
	//Макет3 = ПолучитьМакет("СозданиеОдногоПользователяИБ");
	//Макет3.ВставитьОбласть(Макет2.Область(2,, 2), Макет3.Область(1,, 1), ТипСмещенияТабличногоДокумента.ПоВертикали);
	//Макет3.Область(1,, 1).Видимость = Ложь;
	//
	//ЮТест.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет3,, Истина, "Таблицы 1 и 3 должны совпадать, а они различны!");
	
	Макет4 = ПолучитьМакет("СозданиеОдногоПользователяИБ");
	Макет4.Область(1,, 1).Видимость = Ложь;
	
	ЮТест.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(Макет1, Макет4, "Таблицы 1 и 4 должны совпадать, а они различны!");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМакет(ИмяМакета)
	ОсновнойОбъект = ОсновнойОбъект();
	Макет = ОсновнойОбъект.ПолучитьМакет(ИмяМакета);
	
	Макет2 = Новый ТабличныйДокумент;
	Макет2.Вывести(Макет);
	Возврат Макет2;
КонецФункции

&НаСервере
Функция ОсновнойОбъект()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

//} 