{2,
{28,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{17,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},1,
{0,0,1},0,1},0,"","",1,
{17,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{6,3,0,1},
{0,0,0},0,0,1}
},"&НаКлиенте
Перем Я_Тест;

&НаКлиенте
Функция ПолучитьСписокТестов(юТест) Экспорт
	
	Я_Тест = юТест;
	
	Результат = Я_Тест.Новый_НаборТестов();
	
	Я_Тест.НаборТестов_Добавить(Результат, ""Тесты_ПроверитьВыполнилось"");
	Я_Тест.НаборТестов_Добавить(Результат, ""Тесты_ПроверитьВыполнилосьУпал"");
	
	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьНеВыполнилось"");
	Я_Тест.НаборТестов_Добавить(Результат, ""Тест_ПроверитьНеВыполнилосьУпал"");
	
	Я_Тест.НаборТестов_Добавить(Результат, ""Тесты_ПроверитьМетодВыполнился"");
	Я_Тест.НаборТестов_Добавить(Результат, ""Тесты_ПроверитьМетодВыполнилсяУпал"");
	
	Я_Тест.НаборТестов_Добавить(Результат, ""Тесты_ПроверитьМетодНеВыполнился"");
	Я_Тест.НаборТестов_Добавить(Результат, ""Тесты_ПроверитьМетодНеВыполнилсяУпал"");
	
	Я_Тест.НаборТестов_Добавить(Результат, ""Bug_4456"");
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Тесты_ПроверитьВыполнилось() Экспорт
	Я_Тест.ПроверитьВыполнилось(""рез = 10"");
КонецПроцедуры

&НаКлиенте
Процедура Тесты_ПроверитьВыполнилосьУпал() Экспорт
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьВыполнилось(""""рез = 1/0"""")"", ""Хотели, чтобы алгоритм """"рез = 1/0"""" выполнился, а он упал с ошибкой """"{(1)}: Деление на 0"");
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьНеВыполнилось() Экспорт
	Я_Тест.ПроверитьНеВыполнилось(""рез = 1/0"", ""Деление на 0"");
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПроверитьНеВыполнилосьУпал() Экспорт
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьНеВыполнилось(""""рез = 10"""", """"Деление на 0"""")"", ""Хотели, чтобы алгоритм """"рез = 10"""" упал, а он выполнился"");
	Я_Тест.ПроверитьНеВыполнилось(""ПроверитьНеВыполнилось(""""рез = 1/0"""", """"Другое сообщение об ошибке"""")"", ""Хотели, чтобы алгоритм """"рез = 1/0"""" упал с сообщением об ошибке """"Другое сообщение об ошибке"""", а он упал с сообщением """"{(1)}: Деление на 0"");
КонецПроцедуры

&НаКлиенте
Процедура Тесты_ПроверитьМетодВыполнился() Экспорт
	Текст = Новый ТекстовыйДокумент;
	Я_Тест.ПроверитьМетодВыполнился(Текст, ""Очистить"");
КонецПроцедуры

&НаКлиенте
Процедура Тесты_ПроверитьМетодВыполнилсяУпал() Экспорт
	Я_Тест.ПроверитьНеВыполнилось(""Текст = Новый ТекстовыйДокумент; ПроверитьМетодВыполнился(Текст, """"__Очистить"""")"", ""Хотели, чтобы код """"Объект.__Очистить()"""" выполнился, а он упал с ошибкой """"{(1)}: Метод объекта не обнаружен (__Очистить)"");
КонецПроцедуры

&НаКлиенте
Процедура Тесты_ПроверитьМетодНеВыполнился() Экспорт
	Текст = Новый ТекстовыйДокумент;
	Я_Тест.ПроверитьМетодНеВыполнился(Текст, ""__Очистить"", ""Метод объекта не обнаружен (__Очистить)"");
КонецПроцедуры

&НаКлиенте
Процедура Тесты_ПроверитьМетодНеВыполнилсяУпал() Экспорт
	Я_Тест.ПроверитьНеВыполнилось(""Текст = Новый ТекстовыйДокумент;ПроверитьМетодНеВыполнился(Текст, """"Очистить"""", """"Тут неважно, что"""")"", ""Хотели, чтобы код """"Объект.Очистить()"""" упал, а он выполнился"");
	Я_Тест.ПроверитьНеВыполнилось(""Текст = Новый ТекстовыйДокумент;ПроверитьМетодНеВыполнился(Текст, """"__Очистить"""", """"Тут неважно, что"""")"", ""Хотели, чтобы код """"Объект.__Очистить()"""" упал с сообщением об ошибке """"Тут неважно, что"""", а он упал с сообщением """"{(1)}: Метод объекта не обнаружен (__Очистить)"");
КонецПроцедуры

&НаКлиенте
Процедура Bug_4456() Экспорт
	Я_Тест.ПроверитьВыполнилось(""Упало = Истина"");
	Я_Тест.ПроверитьВыполнилось(""Успех = Ложь"");
КонецПроцедуры",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",ba5460d1-9861-4aa5-b6cb-88d26240fac8}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0}
}